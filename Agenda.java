
package View;

import DAO.AgendamentoDAO;
import DAO.ClienteDAO;
import DAO.ServicoDAO;
import DTO.AgendamentoDTO;
import DTO.ClienteDTO;
import DTO.ServiçoDTO;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author icaro
 */
public class Agenda extends javax.swing.JFrame {

    /**
     * Creates new form Agenda
     */
    public Agenda() {
        initComponents();
        listarValoresAgendamento();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(Login.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAgendamento = new javax.swing.JTable();
        jhora = new javax.swing.JLabel();
        txthora = new javax.swing.JTextField();
        bagendar1 = new javax.swing.JButton();
        txttelefone = new javax.swing.JTextField();
        jtelefone = new javax.swing.JLabel();
        txtidagen = new javax.swing.JTextField();
        jidage = new javax.swing.JLabel();
        txtservico = new javax.swing.JTextField();
        jobservação = new javax.swing.JLabel();
        txtvalor = new javax.swing.JTextField();
        jvalor = new javax.swing.JLabel();
        txtdata = new javax.swing.JTextField();
        jdata = new javax.swing.JLabel();
        jserviço = new javax.swing.JLabel();
        bconsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtobs = new javax.swing.JTextArea();
        jId = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jpainelfundo = new javax.swing.JLabel();
        jfundoagenda = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Agendamento", "Id Cliente", "Id Serviço", "Data", "Hora"
            }
        ));
        jScrollPane2.setViewportView(tabelaAgendamento);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 540, 900, 130));

        jhora.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jhora.setForeground(new java.awt.Color(255, 255, 255));
        jhora.setText("Hora:");
        getContentPane().add(jhora, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, -1, -1));
        getContentPane().add(txthora, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 350, -1));

        bagendar1.setBackground(new java.awt.Color(51, 102, 0));
        bagendar1.setText("AGENDAR");
        bagendar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagendar1ActionPerformed(evt);
            }
        });
        getContentPane().add(bagendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 400, 400, 40));
        getContentPane().add(txttelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 350, -1));

        jtelefone.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jtelefone.setForeground(new java.awt.Color(255, 255, 255));
        jtelefone.setText("Telefone:");
        getContentPane().add(jtelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, -1, -1));
        getContentPane().add(txtidagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 350, -1));

        jidage.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jidage.setForeground(new java.awt.Color(255, 255, 255));
        jidage.setText("Id Agendamento:");
        getContentPane().add(jidage, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, -1, 20));
        getContentPane().add(txtservico, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 350, -1));

        jobservação.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jobservação.setForeground(new java.awt.Color(255, 255, 255));
        jobservação.setText("Observação:");
        getContentPane().add(jobservação, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, -1, -1));
        getContentPane().add(txtvalor, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 350, -1));

        jvalor.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jvalor.setForeground(new java.awt.Color(255, 255, 255));
        jvalor.setText("Valor R$:");
        getContentPane().add(jvalor, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, 10));
        getContentPane().add(txtdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 350, -1));

        jdata.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jdata.setForeground(new java.awt.Color(255, 255, 255));
        jdata.setText("Data:");
        getContentPane().add(jdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, -1, -1));

        jserviço.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jserviço.setForeground(new java.awt.Color(255, 255, 255));
        jserviço.setText("ID Serviço:");
        getContentPane().add(jserviço, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, -1, -1));

        bconsultar.setBackground(new java.awt.Color(51, 102, 0));
        bconsultar.setText("CONSULTAR DADOS");
        bconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bconsultarActionPerformed(evt);
            }
        });
        getContentPane().add(bconsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, 400, 40));

        jtobs.setColumns(20);
        jtobs.setRows(5);
        jScrollPane1.setViewportView(jtobs);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 400, 290));

        jId.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        jId.setForeground(new java.awt.Color(255, 255, 255));
        jId.setText("Id Cliente:");
        getContentPane().add(jId, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, -1, 20));
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 350, -1));

        jpainelfundo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jpainelfundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Agenda-PainelFundo.png"))); // NOI18N
        getContentPane().add(jpainelfundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 1030, 670));

        jfundoagenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/sistema-para-salão-de-beleza.jpeg"))); // NOI18N
        getContentPane().add(jfundoagenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>                        

    private void bconsultarActionPerformed(java.awt.event.ActionEvent evt) {                                           
       //confirmar que os txt existem no banco de dados(confirmar que tem o cliente, serviço e se não dar um erro de cadastro)
         try {
            int id_agendamento=Integer.parseInt(txtidagen.getText());
            int id_cliente=Integer.parseInt(txtid.getText());
            int id_servico=Integer.parseInt(txtservico.getText());
            double valor_servico=Double.parseDouble(txtvalor.getText());
            String telefone_cliente=txttelefone.getText();
            Date data_agen=java.sql.Date.valueOf(txtdata.getText());
            Time hora_agen=java.sql.Time.valueOf(txthora.getText());
            
            
            
            AgendamentoDTO objagendamentodto=new AgendamentoDTO();
            objagendamentodto.setId_agendamento(id_agendamento);
            objagendamentodto.setId_cliente(id_cliente);    
            objagendamentodto.setId_servico(id_servico);
            objagendamentodto.setData(data_agen);    
            objagendamentodto.setHora(hora_agen);
            
            
            ServiçoDTO objservicodto=new ServiçoDTO();
            objservicodto.setValor_servico(valor_servico);       
            
            ClienteDTO objclientedto=new ClienteDTO();
            objclientedto.setTelefone_usuario(telefone_cliente);
            
            AgendamentoDAO objagendamentodao=new AgendamentoDAO();
            ResultSet ragendamentodao=objagendamentodao.autenticacaoAgenda(objagendamentodto);
                           
            ClienteDAO objclientedao=new ClienteDAO();
            ResultSet ragendacli=objclientedao.autenticacaoAgenda(objclientedto);
            
            ServicoDAO objservicodao=new ServicoDAO();
            ResultSet ragenservdao=objservicodao.autenticacaoAgenda(objservicodto);    
            
         //colocar os dados na tabela de observação 
            if(ragendamentodao.next()&& ragenservdao.next()&& ragendacli.next()){
               jtobs.append("DADOS DE AGENDAMENTO:" + "\n");
               jtobs.append("**********" + "\n");
               jtobs.append("Id do agendamento:" + txtidagen.getText() + "\n");
               jtobs.append("Id do Cliente:" + txtid.getText() + "\n");
               jtobs.append("Id do Serviço:" + txtservico.getText() + "\n");
               jtobs.append("Valor:" + txtvalor.getText() + "\n");
               jtobs.append("Data:" + txtdata.getText() + "\n");
               jtobs.append("Hora:" + txthora.getText() + "\n");
               jtobs.append("Telefone do Cliente:" + txttelefone.getText() + "\n");              
            }else{
                JOptionPane.showMessageDialog(null, "Informações inválidas!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Login: " + e);
        } 
                    
         listarValoresAgendamento();
     
        
        
        
    }                                          

    private void bagendar1ActionPerformed(java.awt.event.ActionEvent evt) {                                          
         try {
            int id_cliente=Integer.parseInt(txtid.getText());
            int id_servico=Integer.parseInt(txtservico.getText());
            double valor_servico=Double.parseDouble(txtvalor.getText());
            Date data_agen=java.sql.Date.valueOf(txtdata.getText());
            Time hora_agen=java.sql.Time.valueOf(txthora.getText());
                        
            AgendamentoDTO objagendamentodto=new AgendamentoDTO();
            objagendamentodto.setId_cliente(id_cliente);    
            objagendamentodto.setId_servico(id_servico);
            objagendamentodto.setData(data_agen);    
            objagendamentodto.setHora(hora_agen);
        
            ServiçoDTO objservicodto=new ServiçoDTO();
            objservicodto.setValor_servico(valor_servico);
        
            AgendamentoDAO objagendamentodao=new AgendamentoDAO();
            ResultSet ragendamentodao=objagendamentodao.autenticacaoAgendamento(objagendamentodto);
            
            ServicoDAO objservicodao=new ServicoDAO();
            ResultSet ragenservdao=objservicodao.autenticacaoAgenda(objservicodto); 
            
            if(ragendamentodao.next()&& ragenservdao.next()){
                objagendamentodao.agendarNovo(objagendamentodto);
                  }else{
                JOptionPane.showMessageDialog(null, "Informações inválidas para agendamento!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Login: " + e);
        }
            
            
        
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agenda().setVisible(true);
            }
        });
    }
                 private void listarValoresAgendamento(){
               
                   AgendamentoDAO objetoAgendamentoDAO=new AgendamentoDAO();
                   DefaultTableModel model=(DefaultTableModel)tabelaAgendamento.getModel();
                   model.setNumRows(0);
                   ArrayList<AgendamentoDTO> lista=objetoAgendamentoDAO.pesquisarAgendamento();
                   
                   for(int num=0;num<lista.size();num++){
                       model.addRow(new Object[]{
                           lista.get(num).getId_agendamento(),
                           lista.get(num).getId_cliente(),
                           lista.get(num).getId_servico(),
                           lista.get(num).getData(),
                           lista.get(num).getHora()
                       });
                   }
            
               }
    // Variables declaration - do not modify                     
    private javax.swing.JButton bagendar1;
    private javax.swing.JButton bconsultar;
    private javax.swing.JLabel jId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jdata;
    private javax.swing.JLabel jfundoagenda;
    private javax.swing.JLabel jhora;
    private javax.swing.JLabel jidage;
    private javax.swing.JLabel jobservação;
    private javax.swing.JLabel jpainelfundo;
    private javax.swing.JLabel jserviço;
    private javax.swing.JLabel jtelefone;
    private javax.swing.JTextArea jtobs;
    private javax.swing.JLabel jvalor;
    private javax.swing.JTable tabelaAgendamento;
    private javax.swing.JTextField txtdata;
    private javax.swing.JTextField txthora;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtidagen;
    private javax.swing.JTextField txtservico;
    private javax.swing.JTextField txttelefone;
    private javax.swing.JTextField txtvalor;
    // End of variables declaration                   
}
